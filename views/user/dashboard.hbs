<div class="dashboard-body">
    <div class="product-list container ">
        <div class="row">

            {{#each products as |product|}}
            <div class="col-xl-3 col-lg-4 col-md-4  col-12 text-center">
                <div class="card mt-5 border-info " style="width: 15rem; height: 24rem">
                    <img class="card-img-top img-fluid" src="/images/{{this.pimage}}" alt="Card image cap"
                        style="height: 8.5rem">
                    <div class="card-body ">
                        <h5 class="card-title">{{this.pname}}</h5>
                        Description:<p class="card-text">{{this.pdescription}}</p>
                        Price:<h3 class="card-text">{{this.pprice}}</h3>
                        {{!-- <a href="checkout" class="btn btn-success">Buy Now</a>  --}}
                        <button data-id="{{this.pid}}" data-name="{{this.pname}}" data-price="{{this.pprice}}" id="modal" class="add-to-cart btn btn-success">Buy
                            Now</button>
                    </div>
                </div>
            </div>
            {{/each}}

            {{!-- <div class="col">
                <div class="card" style="width: 20rem;">
                    <img class="card-img-top" src="https://3.imimg.com/data3/IC/JO/MY-9839190/organic-lemon-250x250.jpg"
                        alt="Card image cap">
                    <div class="card-block">
                        <h4 class="card-title">Lemon</h4>
                        <p class="card-text">Price: $5</p>
                        <a href="#" data-name="Lemon" data-price="5" class="add-to-cart btn btn-primary">Add to cart</a>
                    </div>
                </div>
            </div> --}}

        </div>

    </div>
</div>

{{!-- <button type="button" id="modal" class="btn btn-primary" data-toggle="modal" data-target="#cart">Cart (<span
        class="total-count"></span>)</button><button class="clear-cart btn btn-danger">Clear Cart</button></div> --}}


<!-- Modal -->
<div class="modal fade" id="cart" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Cart</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <table class="show-cart table">

                </table>
                <div>Total price: <img src="https://img.icons8.com/material-rounded/24/000000/rupee.png"/> <span class="total-cart text-dark"></span></div>
            </div>
            <div class="modal-footer">
                <button type="button" class="close btn btn-primary" data-dismiss="modal">Add More Items</button>
                {{!-- <button type="button" class="btn btn-primary">Order now</button> --}}
                {{!-- <a href="/checkout"   id="orderbtn" class="btn btn-success">Checkout</a> --}}
            <button class="btn btn-success" onclick="checkout();">Checkout</button>
            </div>
        </div>
    </div>
</div>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script>
    //$("#modal").click(function () {
    //open modal popup
    // displayCart();
    //$("#cart").modal("show");
    //});

    //open modal
    $(document).on("click", "#modal", function () {
        $("#cart").modal("show");
    });

    //modal close
    $("#cart").on("hidden.bs.modal", function () {
        $(".show-cart").html("");
    });
    //modal close on close button
    $("#cart").on("click", ".close", function () {
        $("#cart").modal("hide");
    });




    var shoppingCart = (function () {
        // =============================
        // Private methods and propeties
        // =============================
        cart = [];

        // Constructor
        function Item(name, price, count, id) {
            this.name = name;
            this.price = price;
            this.count = count;
            this.id = id;
        }

        // Save cart
        function saveCart() {
            sessionStorage.setItem('shoppingCart', JSON.stringify(cart));
        }

        // Load cart
        {{!-- function loadCart() {
            cart = JSON.parse(sessionStorage.getItem('shoppingCart'));
        }
        if (sessionStorage.getItem("shoppingCart") != null) {
            loadCart();
        } --}}


        // =============================
        // Public methods and propeties
        // =============================
        var obj = {};

        // Add to cart
        obj.addItemToCart = function (name, price, count, id) {
            for (var item in cart) {
                if (cart[item].id === id) {
                    cart[item].count++;
                    saveCart();
                    return;
                }
            }
            var item = new Item(name, price, count, id);
            cart.push(item);
            saveCart();
        }
        // Set count from item
        obj.setCountForItem = function (id, count) {
            for (var i in cart) {
                if (cart[i].id === id) {
                    cart[i].count = count;
                    break;
                }      
            }
        };
        // Remove item from cart
        obj.removeItemFromCart = function (id) {
            for (var item in cart) {
                if (cart[item].id === id) {
                    cart[item].count--;
                    if (cart[item].count === 0) {
                        cart.splice(item, 1);
                    }
                    break;
                }
            }
            saveCart();
        }

        // Remove all items from cart
        obj.removeItemFromCartAll = function (id) {
            for (var item in cart) {
                if (cart[item].id === id) {
                    cart.splice(item, 1);
                    break;
                }
            }
            saveCart();
        }

        // Clear cart
        obj.clearCart = function () {
            cart = [];
            saveCart();
        }

        // Count cart 
        obj.totalCount = function () {
            var totalCount = 0;
            for (var item in cart) {
                totalCount += cart[item].count;
            }
            return totalCount;
        }

        // Total cart
        obj.totalCart = function () {
            var totalCart = 0;
            for (var item in cart) {
                totalCart += cart[item].price * cart[item].count;
            }
            return Number(totalCart.toFixed(2));
        }

        // List cart
        obj.listCart = function () {
            var cartCopy = [];
            for (i in cart) {
                item = cart[i];
                itemCopy = {};
                for (p in item) {
                    itemCopy[p] = item[p];

                }
                itemCopy.total = Number(item.price * item.count).toFixed(2);
                cartCopy.push(itemCopy)
            }
            return cartCopy;
        }

        // cart : Array
        // Item : Object/Class
        // addItemToCart : Function
        // removeItemFromCart : Function
        // removeItemFromCartAll : Function
        // clearCart : Function
        // countCart : Function
        // totalCart : Function
        // listCart : Function
        // saveCart : Function
        // loadCart : Function
         //console.log(obj);
        return obj;
       
    })();


    // *****************************************
    // Triggers / Events
    // ***************************************** 
    // Add item
    $('.add-to-cart').click(function (event) {
        event.preventDefault();
        var name = $(this).data('name');
        var price = Number($(this).data('price'));
        var id = $(this).data('id');
        shoppingCart.addItemToCart(name, price, 1, id);
        displayCart();
    });

    // Clear items
    $('.clear-cart').click(function () {
        shoppingCart.clearCart();
        displayCart();
    });


    function displayCart() {
        var cartArray = shoppingCart.listCart();
        var output = "";
        for (var i in cartArray) {
            output += "<tr>" +
                "<td>" + cartArray[i].name + "</td>" +
                "<td> <img src='https://img.icons8.com/material-rounded/24/000000/rupee.png'/> " + cartArray[i].price + "</td>" +
                "<td><div class='input-group'><button class='minus-item input-group-addon btn btn-primary' data-id=" +
                cartArray[i].id + "></button>" +
                "<input type='number' class='item-count form-control' data-id='" + cartArray[i].id + "' value='" +
                cartArray[i].count + "'>" +
                "<button class='plus-item btn btn-primary input-group-addon' data-id=" + cartArray[i].id +
                "></button></div></td>" +
                "<td><button class='delete-item btn btn-danger text-danger' data-id="+cartArray[i].id+" data-name=" + cartArray[i].name + ">X</button></td>" +
                " = " +
                "<td>" + cartArray[i].total + "</td>" +
                "</tr>";
        }
        $('.show-cart').html(output);
        $('.total-cart').html(shoppingCart.totalCart());
        $('.total-count').html(shoppingCart.totalCount());
    }

    // Delete item button

    $('.show-cart').on("click", ".delete-item", function (event) {
        var id = $(this).data('id')
        console.log(id);
        shoppingCart.removeItemFromCartAll(id);
        displayCart();
    })


    // -1
    $('.show-cart').on("click", ".minus-item", function (event) {
        var id = $(this).data('id');
        shoppingCart.removeItemFromCart(id);
        displayCart();
    })
    // +1
    $('.show-cart').on("click", ".plus-item", function (event) {
        var id = $(this).data('id')
       // console.log(id)
        shoppingCart.addItemToCart(id);
        displayCart();
    })

    // Item count input
    $('.show-cart').on("change", ".item-count", function (event) {
        var id = $(this).data('id');
        console.log(id);
        var count = Number($(this).val());
        shoppingCart.setCountForItem(id, count);
        displayCart();
    });

    displayCart();

    function checkout(){
        console.log("check");
        var orderId = generateOrderId();
        var cartArray = shoppingCart.listCart();
        var totalPrice = shoppingCart.totalCart();
        $.ajax({
            url: '/addto-cart',
            type: 'POST',
            data: {
                cart: cartArray,
                totalPrice: totalPrice,
                orderId: orderId
            },
            success: function(response){
                console.log(response);
                shoppingCart.clearCart();
                {{!-- displayCart(); --}}
                window.location.href = "/checkout";
            }
        });
    
    }

    function generateOrderId(){
        var orderId = Math.floor(Math.random() * 1000000);
        return orderId;
    }

</script>